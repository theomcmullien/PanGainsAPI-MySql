// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PanGainsAPI.Data;

#nullable disable

namespace PanGainsAPI.Migrations
{
    [DbContext(typeof(PanGainsAPIContext))]
    [Migration("20220628140330_AdminAccountAdded")]
    partial class AdminAccountAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("PanGainsAPI.Models.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AverageChallengePos")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MessageToken")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Notifications")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Private")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AccountID");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("PanGainsAPI.Models.AdminAccount", b =>
                {
                    b.Property<int>("AdminAccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("AdminAccountID");

                    b.ToTable("AdminAccount");
                });

            modelBuilder.Entity("PanGainsAPI.Models.Challenges", b =>
                {
                    b.Property<int>("ChallengesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChallengeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ChallengesID");

                    b.ToTable("Challenges");
                });

            modelBuilder.Entity("PanGainsAPI.Models.ChallengeStats", b =>
                {
                    b.Property<int>("ChallengeStatsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChallengeTotalReps")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LeaderboardID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChallengeStatsID");

                    b.ToTable("ChallengeStats");
                });

            modelBuilder.Entity("PanGainsAPI.Models.CompletedWorkout", b =>
                {
                    b.Property<int>("CompletedWorkoutID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DateCompleted")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoutineID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TotalWeightLifted")
                        .HasColumnType("REAL");

                    b.HasKey("CompletedWorkoutID");

                    b.ToTable("CompletedWorkout");
                });

            modelBuilder.Entity("PanGainsAPI.Models.DaysWorkedOut", b =>
                {
                    b.Property<int>("DaysWorkedOutID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Hours")
                        .HasColumnType("INTEGER");

                    b.HasKey("DaysWorkedOutID");

                    b.ToTable("DaysWorkedOut");
                });

            modelBuilder.Entity("PanGainsAPI.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ExerciseID");

                    b.ToTable("Exercise");
                });

            modelBuilder.Entity("PanGainsAPI.Models.Folder", b =>
                {
                    b.Property<int>("FolderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FolderLikes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FolderName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FolderID");

                    b.ToTable("Folder");
                });

            modelBuilder.Entity("PanGainsAPI.Models.Leaderboard", b =>
                {
                    b.Property<int>("LeaderboardID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChallengesID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LeaderboardDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalParticipants")
                        .HasColumnType("INTEGER");

                    b.HasKey("LeaderboardID");

                    b.ToTable("Leaderboard");
                });

            modelBuilder.Entity("PanGainsAPI.Models.Routine", b =>
                {
                    b.Property<int>("RoutineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FolderID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoutineName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RoutineID");

                    b.ToTable("Routine");
                });

            modelBuilder.Entity("PanGainsAPI.Models.Set", b =>
                {
                    b.Property<int>("SetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Kg")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Previous")
                        .HasColumnType("TEXT");

                    b.Property<int>("Reps")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SetRow")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SetType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("YourExerciseID")
                        .HasColumnType("INTEGER");

                    b.HasKey("SetID");

                    b.ToTable("Set");
                });

            modelBuilder.Entity("PanGainsAPI.Models.Social", b =>
                {
                    b.Property<int>("SocialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FollowingID")
                        .HasColumnType("INTEGER");

                    b.HasKey("SocialID");

                    b.ToTable("Social");
                });

            modelBuilder.Entity("PanGainsAPI.Models.Statistics", b =>
                {
                    b.Property<int>("StatisticsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AvgReps")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AvgSets")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AvgWorkoutTime")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TotalLifted")
                        .HasColumnType("REAL");

                    b.Property<int>("TotalWorkouts")
                        .HasColumnType("INTEGER");

                    b.HasKey("StatisticsID");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("PanGainsAPI.Models.UserAuth", b =>
                {
                    b.Property<int>("UserAuthID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserAuthID");

                    b.ToTable("UserAuth");
                });

            modelBuilder.Entity("PanGainsAPI.Models.YourExercise", b =>
                {
                    b.Property<int>("YourExerciseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExerciseID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoutineID")
                        .HasColumnType("INTEGER");

                    b.HasKey("YourExerciseID");

                    b.ToTable("YourExercise");
                });
#pragma warning restore 612, 618
        }
    }
}
